stages:
  - test
  - history
  - report
  - publish_report

variables:
  TEST_GROUPS:
    value: petStore
    description: группы тестов для запуска
    options:
      - petStore
      - pet
      - user


      # Джоб по запуску автотестов
api_petstore_test:
  image: maven:3.9.6-amazoncorretto-17
  stage: test
  #флаг указывает что пайплайн продолжит свое выполнение, даже если данная джоба упадет
  #(например - не пройдут тесты)
  allow_failure: true
  script:
    - mvn clean test -Dtest.groups=$TEST_GROUPS
  artifacts:
    #'when: always' - мы всегда будем получать артефакты - и в случае успеха, и в случае падения джобы
    #для нас это актуально, поскольку тесты не всегда будут на 100% успешными:)
    when: always
    paths:
      - target/allure-results
    expire_in: 1 day

# Собираем результаты, обогащаем историей предыдущих запусков
accumulate_results:
  stage: history
  image: storytel/alpine-bash-curl
  script:
    #создаем папку для хранения истории. если такая уже существует - ошибки не будет. (флаг -p)
    - mkdir -p allure_history

    #копируем результаты последнего прогона в папку для хранения истории.
    - cp -a target/allure-results allure_history/allure_results
  artifacts:
    paths:
      - allure_history
    expire_in: 1 day

# Генерируем репорт
generate_report:
  stage: report
  image: simple1elf/allure-docker
  script:
    - allure generate -c allure_history/allure_results -o allure_history/allure_report
  artifacts:
    paths:
      - allure_history/allure_report
    expire_in: 1 day

# Хостим репорт на GitLab pages

pages:
  stage: publish_report
  script:
    - mkdir public
    - mv allure_history/allure_report/* public
  artifacts:
    paths:
      - public
    when: always
    expire_in: 1 day


